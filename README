* DaCapo and Cassandra/YCSB benchmarks on Xen4Tess(XARC)
*
********************************************************************************

INTRODUCTION
********************************************************************************

This document contains descriptions and usage of the scripts used to run multiple concurrent instances (each in its own domain) of the DaCapo and Cassandra/YCSB benchmark on Xen4Tess. Instances are run as OSv (http://osv.io/) images on top of the Xen4Tess hypervisor.

FILES AND THEIR DESCRIPTIONS
********************************************************************************

./dacapo_converge.py: Runs the DaCapo benchmark suite locally on the machine (NOT WITHIN A DOMAIN) to determine the average amount of iterations needed to warmup each of the DaCapo benchmarks until performance converges.
./dacapo_convergences.json: The average amount of interations needed to warmup each of the DaCapo benchmarks stored in json format.
./dacapo_min_heap.json: DEPRECIATED. The min heapsize needed for each of the DaCapo benchmarks. The current heapsizes are inaccurate so please do not refer to them for now.
./parse_dacapo.py: Parses results from the DaCapo experiments and generates graphs.
./parse_dacapo_jit.py: Parses results from the DaCapo JIT experiments and generates graphs.
./run_dacapo.py: Standard DaCapo Experiment. Run script to startup multiple concurrent instances of the DaCapo benchmark suite all running the same benchmark. Benchmark iteration runtimes are outputed for each domain.
./run_dacapo_jit.py: JIT Experiment. Run script to startup multiple concurrent instances of the DaCapo benchmark to warmup in parallel. After warmup, all but one domain are destroyed. The remaining domain is run to completion to output benchmark iteration runtimes.
./setup-gangsched-cpupool.sh: A bash script intended to easily create a new gang-scheduled cpupool within Xen.

- NOTE: The following files are adapted from the run scripts found at https://github.com/cloudius-systems/osv/tree/master/scripts. These run scripts are used to start up domains on a Xen hypervisor

./scripts/imgedit.py: Edits the command line to execute upon startup for an OSv image using qemu-nbd. Uses nbd_client.py to edit the image. 
./scripts/nbd_client.py: Client to connect to qemu-nbd. Assumes qemu-nbd is found on port 10809.
./scripts/run.py: Main run script. When using the Xen hypervisor, this run script creates a temporary file containing the domain config and uses the xl toolset to launch the domain. 

RUNNING DACAPO EXPERIMENTS
********************************************************************************

To run the DaCapo experiements, the run_dacapo.py script is used. This script launches multiple domains running DaCapo in parallel. This script also uses the xenalyze and xentrace tools to profile CPU usage in Xen. The important options to run_dacapo.py are as follows

  -b BENCHMARK, --benchmark BENCHMARK
                        Choose which benchmark(s) to run. Currently must be from the following list: avrora, h2, jython, luindex, lusearch, xalan. The other benchmarks do not seem to run stably on OSv. Can pass in a comma delimited string of benchmarks as well.
  --startjvms STARTJVMS
                        Starting number of JVMs to run in parallel. 
  -n NUMJVMS, --numjvms NUMJVMS
                        Max numbers of JVMs to run in parallel. If startjvms is 1 and numjvms is 16, then we will run experiments with 1, 2, 4, 8, and 16 domains running in parallel.   
  -r RESULTSDIR, --resultsdir RESULTSDIR
                        Directory to store results to.
  --startheap STARTHEAP
                        Starting Heapsize for our benchmarks.
  -p MAXHEAP, --maxheap MAXHEAP
                        Max Heapsize for our benchmarks. If startheap is 512 and maxheap is 2048, then we will run experiments  with JVMS containing 512, 1024, and 2048MB heapsizes.
  -v, --verbose         Be more verbose
  -s, --stdout          Output to stdout rather than to results directory.
  -x, --xen             Whether or not to run this experiment on Xen.
  -g, --gangscheduled   Whether or not gang scheduling is used
  -i IMAGE, --image IMAGE
                        Location of the OSv image with DaCapo on it. 
  -m MEMSIZE, --memsize MEMSIZE
                        Specify memory: ex. 1G, 2G, ... to allocate to each domain.
  -c VCPUS, --vcpus VCPUS
                        Specify number of vCPUs to allocate to each domain
  -a CPUS, --cpus CPUS  Which CPU's to pin to for Xen
  --safe                Run in 'Safe' Mode (don't rerun and overwrite tests
                        which we already have results for)
  --cpupool CPUPOOL     Which Xen cpupool to use
  --pausefirst          Whether or not to pause all the domains until all of them begin running the JVM
  --pauseafterwarmup    Whether or not to pause all domains until all of them are done warming up.

To run the JIT experiment, run_dacapo_jit.py is used. This script has similar options to it. One additional option is given.

  --iterations ITERATIONS
                        How many iterations of the experiment to run.

The JIT experiment warmups JVM's in parallel and then measures how long a single JVM takes to complete the benchmark when running alone. The iterations flag allows the user to run this experiement multiple times for multiple data points.


RUNNING CASSANDRA/YCSB EXPERIMENTS
********************************************************************************

PARSING EXPERIMENT DATA FOR GRAPHS
********************************************************************************
